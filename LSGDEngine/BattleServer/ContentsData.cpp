#include "HBattleServerPCH.h"

//--------------------------------------------------------------------
// 캐릭터 최초 생성위치 10 개 지점. (방당 최대 10명)
//
// 게임 시작시 랜덤하게 각 인원을 배치한다.
// 플레이 인원수 만큼 해당 배열의 앞칸부터 사용 하도록 한다.
//
// 5명 플레이 -> [0] ~ [4] 내에서 랜덤배치
// 3명 플레이 -> [0] ~ [2] 내에서 랜덤 배치
// 7명 플레이 -> [0] ~ [6] 내에서 랜덤 배치
//--------------------------------------------------------------------
float	g_Data_Position[10][2] = {{10, 10},{142,155},{10,150},{145,8},{63,154},{140,95},{88,3},{4, 33},{94,161},{140,40}};



//--------------------------------------------------------------------
// 아이템 생성 포인트
//
// 게임 시작시 아래의 위치에 1개의 아이템을 생성시킨다.
//--------------------------------------------------------------------
// 레드존 구역의 포인트에는 모든 지점에 헬멧/탄창 중 1개씩을 랜덤하게 생성 시킨다.
//--------------------------------------------------------------------
float	g_Data_ItemPoint_Redzone[17][2] = {{17,2},{2,72},{17,123},{3,162},{35,64},{43,105},{54,3},{61,37},{54,162},{92,147},{112,9},{109,31},{116,103},{111,160},{116,103},{147,32},{148,148}};

//--------------------------------------------------------------------
// 레드존 외 구역의 포인트에는 지점마다 메디켓/헬멧/탄창 중 1개씩을 랜덤하게 생성 시킨다.
//--------------------------------------------------------------------
float	g_Data_ItemPoint_Playzone[4][2] = {{70,60},{58,89},{96,61},{96,105}};





//--------------------------------------------------------------------
// 탄창 재장전시 총알개수 / 첫 시작시 총알 개수
//--------------------------------------------------------------------
int		g_Data_Cartridge_Bullet = 15;

//--------------------------------------------------------------------
// 헬멧 아이템 획득시 총알 방어 횟수 증가분.  저 횟수만큼 총알 데미지를 0 으로, 헬멧 먹을때마다 누적 증가
//--------------------------------------------------------------------
int		g_Data_HelmetDefensive = 3;

//--------------------------------------------------------------------
// 첫 HP 
//--------------------------------------------------------------------
int		g_Data_HP = 20;


//--------------------------------------------------------------------
// 공격 데미지. (거리에 따라서 비율로 데미지 먹임)
//
// 공격자와 피해자의 거리가 최소 2 ~  최대 17 을 기준으로 잡음.
//
// 2 이하 : 데미지 100%
// 17 초과 : 데미지 0%
// 
// 거리는 공격자와 피해자의 좌표로 실제 거리를 구하여 사용함.
//--------------------------------------------------------------------
int		g_Data_HitDamage = 5;
int		g_Data_KickDamage = 3;

//--------------------------------------------------------------------
// 현재 플레이어의 좌표는 이동패킷의 MoveTargetX / MoveTargetZ 로 저장하여 사용 합니다.  (MoveTargetY 가 아닙니다)
//--------------------------------------------------------------------



//--------------------------------------------------------------------
// 각 레드존 좌표영역  1단계
//
// 레드존은 40초간격으로 랜덤하게 한 구역씩 활성화 됨.
//
// RedZone_Top		12시 방향
// Left:0  Top:0  Right:44  Bottom:170
//
// RedZone_Left		9시 방향
// Left:0  Top:0  Right:153  Bottom:50
//
// RedZone_Right	3시 방향
// Left:0  Top:115  Right:153  Bottom:170
//
// RedZone_Bottom	6시 방향
// Left:102  Top:0  Right:153  Bottom:170
//
// 레드존 활성화 영역에 들어간 경우는 1초당 데미지 1 씩 먹임
//--------------------------------------------------------------------
//--------------------------------------------------------------------
// 4방향 레드존 활성화 이후 추가  마지막 레드존 1개 활성화
//
// 위 레드존 구역이 모두 활성화 된 40초 이후에 마지막 레드존 1개가 활성화 됨.
// 마지막 레드존은 ㄱ 자 형대로 중앙의 4개 블록 중 1개 블록만 안전 구역으로 됨.
//
// * 마지막 레드존은 안전구역 체크로  아래 영역 외의 구역은 모두 데미지 처리 (일반 레드존과 반대)
// * 마지막 레드존이 활성화 되면 기존의 레드존 체크는 모두 중복영역이 되므로 무시해도 됨.
// 
//
//   Live1  Live2  Live3   Live4
//      R    R      R R     R R
//    R R    R R      R     R 
//
//  위 그림처럼 블록별로 1,2,3,4 번호가 매겨지며, 해당 블록만 안전구역 설정.
//
//  1 2
//  3 4
//
//	4개의 마지막 레드존 중 1개가 랜덤하게 활성화 됨
//
//	RedZone_Live1  안전구역 영영
//
//		Left:47		Top:51		Right:75	Bottom:84
//
//
//	RedZone_Live2  안전구역 영영
//
//		Left:47		Top:82		Right:75	Bottom:112
//
//
//	RedZone_Live3  안전구역 영영
//
//		Left:76		Top:51		Right:101	Bottom:85
//
//
//	RedZone_Live4  안전구역 영영
//
//		Left:74		Top:84		Right:100	Bottom:114
//
//--------------------------------------------------------------------

